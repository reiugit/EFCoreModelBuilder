// <auto-generated />
using EFCoreModelBuilder;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreModelBuilder.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240628092135_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreModelBuilder.Entities.AProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AProducts", null, t =>
                        {
                            t.HasCheckConstraint("CK_Price_not_negative", "Price > 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Class AProduct is configured mostly via annotations.",
                            Price = 5.5m
                        });
                });

            modelBuilder.Entity("EFCoreModelBuilder.Entities.BProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BProducts", null, t =>
                        {
                            t.HasCheckConstraint("CK_Price_not_negative", "Price > 0")
                                .HasName("CK_Price_not_negative1");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Class BProduct is configured only via DbContext.ModelBuilder.",
                            Price = 5.5m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
